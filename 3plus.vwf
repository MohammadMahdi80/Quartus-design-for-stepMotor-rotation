/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 70000000.0;
	SIMULATION_TIME = 70000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("de0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("de2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("de1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("de3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("led")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("trig")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("res")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("q0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 35;
			LEVEL 0 FOR 1000000.0;
			LEVEL 1 FOR 1000000.0;
		}
	}
}

TRANSITION_LIST("de0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000032.0;
		LEVEL 1 FOR 999992.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 3999991.0;
		LEVEL 1 FOR 2000009.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 6000000.0;
			LEVEL 1 FOR 2000000.0;
		}
		LEVEL 0 FOR 20999976.0;
	}
}

TRANSITION_LIST("de2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13000024.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 12000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 6000000.0;
		}
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 18999950.0;
	}
}

TRANSITION_LIST("de1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11000024.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 1000003.0;
		LEVEL 0 FOR 4999997.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 6000000.0;
		}
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 18999976.0;
	}
}

TRANSITION_LIST("de3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15000024.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 12000000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 6000000.0;
		}
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 22999976.0;
	}
}

TRANSITION_LIST("led")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000032.0;
		LEVEL 1 FOR 9999983.0;
		LEVEL 0 FOR 3000000.0;
		LEVEL 1 FOR 28000035.0;
		LEVEL 0 FOR 18999950.0;
	}
}

TRANSITION_LIST("trig")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 3000000.0;
		LEVEL 0 FOR 57000000.0;
	}
}

TRANSITION_LIST("res")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 3000000.0;
		LEVEL 0 FOR 47000000.0;
	}
}

TRANSITION_LIST("in1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("in2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70000000.0;
	}
}

TRANSITION_LIST("in3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70000000.0;
	}
}

TRANSITION_LIST("q0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11000015.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 2000000.0;
		}
		LEVEL 1 FOR 1000003.0;
		LEVEL 0 FOR 4999997.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 2000000.0;
		}
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 18999985.0;
	}
}

TRANSITION_LIST("q1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13000015.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4000000.0;
			LEVEL 0 FOR 4000000.0;
		}
		LEVEL 1 FOR 18999985.0;
	}
}

TRANSITION_LIST("q2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17000015.0;
		LEVEL 1 FOR 3000003.0;
		LEVEL 0 FOR 10999997.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 8000000.0;
		LEVEL 1 FOR 22999985.0;
	}
}

TRANSITION_LIST("q3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39000015.0;
		LEVEL 1 FOR 30999985.0;
	}
}

TRANSITION_LIST("q4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("q5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("q6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("q7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("in4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 70000000.0;
	}
}

TRANSITION_LIST("in5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("in6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("in7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

TRANSITION_LIST("in8")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "de0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "de1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "de2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "de3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "led";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "trig";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "res";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 22950;
	MASTER = TRUE;
}
;
